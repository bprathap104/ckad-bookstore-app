apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deploy
  namespace: bookstore-app
  labels:
    app: bookstore-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bookstore-backend
  template:
    metadata:
      labels:
        app: bookstore-backend
    spec:
      initContainers:
      - name: init-db
        image: bprathap104/bookstore-backend:1.9
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: bookstore-config
              key: db-host
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: db-username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: db-password
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: bookstore-config
              key: db-name
        command: ["python", "init_db.py"]
      containers:
      - name: backend
        image: bprathap104/bookstore-backend:1.9
        resources: {}
        env:
        - name: DB_HOST
          value: postgres-svc
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: db-username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: db-password
        - name: DB_NAME
          value: bookstoredb
        volumeMounts:
        - name: log-volume
          mountPath: /var/log
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
      - name: logger
        image: busybox
        command: ['sh', '-c', 'touch /var/log/backend.log && tail -n 100 -f /var/log/backend.log']
        resources: {}
        volumeMounts:
        - name: log-volume
          mountPath: /var/log
      volumes:
      - name: log-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: backend-svc
  namespace: bookstore-app
spec:
  type: ClusterIP
  selector:
    app: bookstore-backend
  ports:
  - port: 5000
    targetPort: 5000
